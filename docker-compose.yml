version: '3'
services:
  mongo:
    image: mongo
    restart: unless-stopped
    ports:
      - 27017:27017
    volumes:
      - "./db_data:/data/db"
    labels:
      - "traefik.enable=false"
  proxy:
    image: node:latest
    volumes:
      - ".:/usr/src/app"
      - "./tmp-node-modules:/usr/src/app/node_modules"
    working_dir: /usr/src/app
    command: npm run proxy-watch
    environment:
      LOG_LEVEL: "${LOG_LEVEL:-debug}"
      JWT_SECRET: "${JWT_SECRET:-lksfkljuwlksjwelkjsdlkjsdlkjweoiseijlxlvkjsldkfjewoirwlkjsdfklj}"
    depends_on: 
      - web
    labels:
      - "traefik.http.routers.proxy.entrypoints=http, traefik"
      - "traefik.http.routers.proxy.service=proxy"
      - "traefik.http.routers.proxy.priority=2"
      - "traefik.http.routers.proxy.rule=PathPrefix(`/live`)"
      - "traefik.http.services.proxy.loadbalancer.server.port=3002"
  api:
    image: tedkulp/node-ffmpeg:latest
    volumes:
      - ".:/usr/src/app"
      - "./tmp-node-modules:/usr/src/app/node_modules"
      # - "../Node-Media-Server:/usr/src/app/node_modules/node-media-server"
    ports:
      - 8888:8888
    working_dir: /usr/src/app
    command: npm run server-watch
    environment:
      LOG_LEVEL: "${LOG_LEVEL:-debug}"
      JWT_SECRET: "${JWT_SECRET:-lksfkljuwlksjwelkjsdlkjsdlkjweoiseijlxlvkjsldkfjewoirwlkjsdfklj}"
    labels:
      - "traefik.http.routers.api1.entrypoints=http, traefik"
      - "traefik.http.routers.api1.service=api1"
      - "traefik.http.routers.api1.priority=2"
      - "traefik.http.routers.api1.rule=PathPrefix(`/api`)||PathPrefix(`/socket.io`)||PathPrefix(`/thumbnails`)"
      - "traefik.http.services.api1.loadbalancer.server.port=3000"
  web:
    image: node
    volumes:
      - ".:/usr/src/app"
      - "./tmp-node-modules:/usr/src/app/node_modules"
      # - "../Node-Media-Server:/usr/src/app/node_modules/node-media-server"
    ports:
      - 1235:1235
    working_dir: /usr/src/app
    command: npm run start-docker
    depends_on: 
      - api
    labels:
      - "traefik.http.routers.web.entrypoints=http, traefik"
      - "traefik.http.routers.web.priority=1"
      - "traefik.http.routers.web.rule=PathPrefix(`/`)"
      - "traefik.http.services.web.loadbalancer.server.port=1234"
  srs:
    image: ossrs/srs:3
    restart: unless-stopped
    volumes:
      - "./srs.conf:/usr/local/srs/conf/srs.conf"
      - "./video:/usr/local/srs/objs/nginx/html/video"
    ports:
      - "1985:1985"
    labels:
      # - "traefik.http.routers.srs.entrypoints=http, traefik"
      # - "traefik.http.routers.srs.service=srs"
      # - "traefik.http.routers.srs.priority=3"
      # - "traefik.http.routers.srs.rule=PathPrefix(`/live`)"
      # - "traefik.http.services.srs.loadbalancer.server.port=8080"
      - "traefik.tcp.routers.rtmp.entrypoints=rtmp"
      - "traefik.tcp.routers.rtmp.service=rtmp"
      - "traefik.tcp.routers.rtmp.rule=HostSNI(`*`)"
      - "traefik.tcp.services.rtmp.loadbalancer.server.port=1935"
  traefik:
    image: traefik
    restart: unless-stopped
    command: --api.insecure=true --providers.docker --entryPoints.rtmp.address=:1935 --entryPoints.http.address=:80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.enable=false"
    ports:
      - 8000:80
      - 8001:8080
      - 1935:1935
